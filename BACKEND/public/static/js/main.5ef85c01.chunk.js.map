{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closedDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","tokExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"6GAAA,6CAEaA,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,gCCPV,0BAYeC,IARQ,SAAAC,GACrB,OACE,yBAAKC,UAAS,UAAKD,EAAME,WAAa,6BACpC,yBAAKD,UAAU,qB,gCCPrB,0CAYeE,IAPE,SAAAH,GACf,OAAOI,IAASC,aACd,yBAAKJ,UAAU,WAAWK,QAASN,EAAMM,UACzCC,SAASC,eAAe,oB,kNCPxBC,E,8DCOWC,G,YAJI,SAACV,GAClB,OAAO,4BAAQC,UAAU,eAAeD,EAAMW,Y,QCmCjCC,G,MAlCE,SAACZ,GAChB,IAAMa,EAAOC,qBAAWtB,KAExB,OACE,wBAAIS,UAAU,aACZ,4BACE,kBAAC,IAAD,CAASc,GAAG,IAAIC,OAAK,GAArB,UAIDH,EAAKnB,YACJ,4BACE,kBAAC,IAAD,CAASqB,GAAE,WAAMF,EAAKlB,OAAX,YAAX,cAGHkB,EAAKnB,YACJ,4BACE,kBAAC,IAAD,CAASqB,GAAG,eAAZ,eAGFF,EAAKnB,YACL,4BACE,kBAAC,IAAD,CAASqB,GAAG,SAAZ,SAGHF,EAAKnB,YACJ,4BACE,4BAAQY,QAASO,EAAKf,QAAtB,c,QCRKmB,G,MAnBI,SAACjB,GAClB,IAAMkB,EACJ,kBAACC,EAAA,EAAD,CACEC,GAAIpB,EAAMqB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb,2BAAOxB,UAAU,cAAcK,QAASN,EAAMM,SAC3C,IACAN,EAAMW,SAAU,MAKvB,OAAOP,IAASC,aAAaa,EAASX,SAASC,eAAe,kB,QC8BjDkB,EA1CQ,SAAC1B,GACtB,IAAMa,EAAOC,qBAAWtB,KACxB,EAAwCmC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAsB,WAC1BD,GAAgB,IAGlB,OACE,kBAAC,IAAME,SAAP,KACGH,GAAgB,kBAAC,IAAD,CAAUtB,QAASwB,IAEpC,kBAAC,EAAD,CAAYT,KAAMO,EAActB,QAASwB,GACvC,yBAAK7B,UAAU,+BACb,kBAAC,EAAD,QAIJ,kBAAC,EAAD,KACE,4BACEA,UAAU,4BACVK,QArBkB,WACxBuB,GAAgB,KAsBV,+BACA,+BACA,gCAEF,wBAAI5B,UAAU,0BACZ,kBAAC,IAAD,CAAMc,GAAE,WAAMF,EAAKlB,OAAX,YAAR,aAEF,yBAAKM,UAAU,+BACb,kBAAC,EAAD,U,QC3BJ+B,EAAQC,IAAMC,MAAK,kBAAM,sDACzBC,EAAWF,IAAMC,MAAK,kBAAM,sDAC5BE,EAAaH,IAAMC,MAAK,kBAAM,sDAC9BG,EAAcJ,IAAMC,MAAK,kBAAM,sDAC/BI,EAAOL,IAAMC,MAAK,kBAAM,sDAsEfK,EApEH,WACV,IAEIC,EAFJ,ELtBqB,WACrB,MAA0Bb,oBAAS,GAAnC,mBAAO/B,EAAP,KAAc6C,EAAd,KACA,EAA4Bd,oBAAS,GAArC,mBAAOhC,EAAP,KAAe+C,EAAf,KACA,EAAsDf,qBAAtD,mBAAOgB,EAAP,KAA4BC,EAA5B,KAEM/C,EAAQgD,uBAAY,SAACC,EAAKlD,EAAOmD,GACrCN,EAAS7C,GACT8C,EAAUI,GACV,IAAME,EACJD,GAAkB,IAAIE,MAAK,IAAIA,MAAOC,UAAY,MACpDN,EAAuBI,GACvBG,aAAaC,QACX,WACAC,KAAKC,UAAU,CACb3D,OAAQmD,EACRlD,MAAOA,EACP2D,WAAYP,EAAkBQ,mBAGjC,IAEG1D,EAAS+C,uBAAY,WACzBJ,EAAS,MACTC,EAAU,MACVE,EAAuB,MACvBO,aAAaM,WAAW,cACvB,IA0BH,OAxBAC,qBAAU,WACR,GAAI9D,GAAS+C,EAAqB,CAChC,IAAMgB,EAAahB,EAAoBO,WAAY,IAAID,MAAOC,UAC9DzC,EAAcmD,WAAW9D,EAAQ6D,QAEjCE,aAAapD,KAEd,CAACb,EAAOE,EAAQ6C,IAEnBe,qBAAU,WACR,IAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAEjDF,GACAA,EAAWlE,OACX,IAAIqD,KAAKa,EAAWP,YAAc,IAAIN,MAEtCpD,EACEiE,EAAWnE,OACXmE,EAAWlE,MACX,IAAIqD,KAAKa,EAAWP,eAGvB,CAAC1D,IAEG,CAAED,QAAOC,QAAOC,SAAQH,UK9BUsE,GAAjCrE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,OAAQH,EAA9B,EAA8BA,OAuC9B,OAlCE6C,EADE5C,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsE,KAAK,IAAIlD,OAAK,GACnB,kBAACgB,EAAD,OAEF,kBAAC,IAAD,CAAOkC,KAAK,kBAAkBlD,OAAK,GACjC,kBAACoB,EAAD,OAEF,kBAAC,IAAD,CAAO8B,KAAK,cAAclD,OAAK,GAC7B,kBAACmB,EAAD,OAEF,kBAAC,IAAD,CAAO+B,KAAK,oBACV,kBAAC7B,EAAD,OAEF,kBAAC,IAAD,CAAUtB,GAAG,OAKf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,IAAIlD,OAAK,GACnB,kBAACgB,EAAD,OAEF,kBAAC,IAAD,CAAOkC,KAAK,kBAAkBlD,OAAK,GACjC,kBAACoB,EAAD,OAEF,kBAAC,IAAD,CAAO8B,KAAK,QAAQlD,OAAK,GACvB,kBAACsB,EAAD,OAEF,kBAAC,IAAD,CAAUvB,GAAG,WAMjB,kBAAC,IAAYoD,SAAb,CACEC,MAAO,CACL1E,aAAcE,EACdA,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,8BACE,kBAAC,WAAD,CACEuE,SACE,yBAAKpE,UAAU,UACb,kBAACF,EAAA,EAAD,QAIHyC,OC9EbpC,IAASkE,OAAO,kBAAC,EAAD,MAAS/D,SAASC,eAAe,W","file":"static/js/main.5ef85c01.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useEffect, useState, useCallback } from 'react';\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className='nav-links'>\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          Users\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>Add Place</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/auth'>Auth</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>Logout</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {\" \"}\r\n        {props.children}{\" \"}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MainNavigation.css';\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport BackDrop from '../UIElements/Backdrop';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst MainNavigation = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closedDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <BackDrop onClick={closedDrawerHandler} />}\r\n\r\n      <SideDrawer show={drawerIsOpen} onClick={closedDrawerHandler}>\r\n        <nav className='main-navigation__drawer-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className='main-navigation__menu-btn'\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className='main-navigation__title'>\r\n          <Link to={`/${auth.userId}/places`}>MyPlaces</Link>\r\n        </h1>\r\n        <nav className='main-navigation__header-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId'>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/auth' exact>\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className='center'>\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}